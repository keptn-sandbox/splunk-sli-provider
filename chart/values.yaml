splunkservice:
  image:
    repository: ghcr.io/keptn-sandbox/splunk-sli-provider # Container Image Name  logLevel: info
    pullPolicy: Always # Kubernetes Image Pull Policy
    tag: "" # Container Tag
  # Set to SP_HOST in the chart's Secret
  spHost: "" # Note: Don't use it in production environment (prefer using k8s secrets - SP_HOST)
  spPort: "" # Note: Don't use it in production environment (prefer using k8s secrets - SP_PORT)
  spUsername: "" # Note: Don't use it in production environment (prefer using k8s secrets - SP_USERNAME)
  spPassword: "" # Note: Don't use it in production environment (prefer using k8s secrets - SP_PASSWORD)
  spApitoken: "" # Note: Don't use it in production environment (prefer using k8s secrets - SP_API_TOKEN)
  spSessionKey: "" # Note: Don't use it in production environment (prefer using k8s secrets - SP_SESSION_KEY)

  alertSuppressPeriod: "3m"
  cronSchedule: "*/1 * * * *"
  dispatchEarliestTime: "-3m"
  dispatchLatestTime: "now"
  actions: ""
  webhookUrl: ""

  # If you want to use existing Secret in the cluster
  # Secret containing splunk's SP_HOST, SP_PORT and [SP_API_TOKEN, SP_SESSSION_KEY, {SP_USERNAME, SP_PASSWORD} ](token names should be an exact match)
  existingSecret: ""
  service:
    enabled: true # Creates a Kubernetes Service for the splunk-sli-provider

distributor:
  stageFilter: "" # Sets the stage this helm service belongs to
  serviceFilter: "" # Sets the service this helm service belongs to
  projectFilter: "" # Sets the project this helm service belongs to
  image:
    repository: ghcr.io/keptn/distributor # Container Image Name
    pullPolicy: IfNotPresent # Kubernetes Image Pull Policy
    tag: "1.0.0" # Container Tag

# Sets the events the service subscribes to
subscription:
  pubsubTopic: "sh.keptn.event.monitoring.configure,sh.keptn.event.configure-monitoring.triggered,sh.keptn.event.get-sli.triggered"

remoteControlPlane:
  enabled: false # Enables remote execution plane mode
  api:
    protocol: "http" # Used Protocol (http, https)
    hostname: "" # Hostname of the control plane cluster (and Port)
    apiValidateTls: true # Defines if the control plane certificate should be validated
    token: "" # Keptn API Token

imagePullSecrets: [] # Secrets to use for container registry credentials

serviceAccount:
  create: true # Enables the service account creation
  annotations: {} # Annotations to add to the service account
  name: "keptn-splunk-sli-provider" # The name of the service account to use.

podAnnotations: {} # Annotations to add to the created pods

podSecurityContext:
  {} # Set the pod security context (e.g. fsGroups)
  # fsGroup: 2000

securityContext: {} # Set the security context (e.g. runAsUser)
#  readOnlyRootFilesystem: true
#  runAsNonRoot: true
#  runAsUser: 1000

resources: # Resource limits and requests
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

nodeSelector: {} # Node selector configuration

tolerations: [] # Tolerations for the pods

affinity: {} # Affinity rules
